dnl Process this file with autoconf to produce a configure script.

AC_INIT(src/ttt3d.cxx)
AM_INIT_AUTOMAKE(ttt3d, 0.0.1)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_CXXCPP
AC_PROG_INSTALL
AC_PROG_RANLIB

plib_suffix="-lplibsl -lplibssgaux -lplibssg -lplibpu -lplibfnt -lplibsg -lplibul"
 
AC_LANG_CPLUSPLUS

dnl Command line arguments.

AC_ARG_WITH(GL,
AC_HELP_STRING([--with-GL=DIR], [set the prefix directory where GL resides]),
GL_PREFIX=$withval, GL_PREFIX=auto)

if test "x$GL_PREFIX" != "xauto"; then
    LDFLAGS="$LDFLAGS -L$GL_PREFIX/lib"
    CPPFLAGS="$CPPFLAGS -I$GL_PREFIX/include"
fi

dnl Checks for header files.

AC_HEADER_STDC

AC_CHECK_HEADERS(GL/gl.h GL/glu.h,, AC_MSG_ERROR([OpenGL header files not found]))
AC_CHECK_HEADER(windows.h, AC_DEFINE(WIN32))
AC_CHECK_HEADER(GL/glut.h, AC_DEFINE(GLUT_IS_PRESENT))
AC_CHECK_HEADER(GL/freeglut.h, AC_DEFINE(FREEGLUT_IS_PRESENT))

if test "x$ac_cv_header_GL_glut_h" = "xno" && test "x$ac_cv_header_GL_freeglut_h" = "xno"; then
   AC_MSG_ERROR([found neither GLUT nor freeglut header file])
fi

AC_CHECK_HEADER(plib/ul.h,, AC_MSG_ERROR([PLIB header files not found]))

dnl Checks for library functions.
dnl check for OpenGL related libraries

if test "$HOSTTYPE" = "macintosh"; then

   dnl Mac OS X

   dnl OpenGL libraries
   LIBS="$LIBS -framework OpenGL -framework GLUT"

   dnl Sound libraries
   LIBS="$LIBS -framework Carbon"

else

AC_CANONICAL_HOST

case "${host}" in
*-*-cygwin* | *-*-mingw32*)
  dnl CygWin under Windoze.

  dnl OpenGL libraries
  LIBS="$LIBS -lwinmm -lglut32 -lglu32 -lopengl32 -luser32 -lgdi32"
	;;
*)
    dnl Check for X11

    AC_PATH_XTRA

    LDFLAGS="$LDFLAGS $X_LIBS"

    x_suffix="$X_PRE_LIBS -lX11 -lXi -lXext -lXmu $X_EXTRA_LIBS -lm"

dnl =========================================================
dnl    if test "x$x_includes" != "x"; then
dnl       CPPFLAGS="$CPPFLAGS -I$x_includes"
dnl    fi
dnl =========================================================

    dnl Reasonable stuff non-windoze variants ... :-)

    AC_CHECK_LIB(dl, dlclose)

    AC_CHECK_LIB(GL, glNewList,,,$x_suffix)
    if test "x$ac_cv_lib_GL_glNewList" = "xno" ; then
        dnl if no GL, check for MesaGL
        AC_CHECK_LIB(MesaGL, glNewList,,,$x_suffix)
    fi

    AC_CHECK_LIB(GLU, gluLookAt,,,$x_suffix)
    if test "x$ac_cv_lib_GLU_gluLookAt" = "xno" ; then
        dnl if no GLU, check for MesaGLU
        AC_CHECK_LIB(MesaGLU, gluLookAt,,,$x_suffix)
    fi

    opengl_LIBS="$LIBS $x_suffix"

    dnl check for glut...or freeglut
    AC_CHECK_LIB(freeglut, glutGetModifiers,,,$opengl_LIBS)
    if test "x$ac_cv_lib_freeglut_glutGetModifiers" = "xno" ; then
        dnl if no freeglut, check for Real GLUT
        AC_CHECK_LIB(glut, glutGetModifiers,,,$opengl_LIBS)

        if test "x$ac_cv_lib_glut_glutGetModifiers" = "xno" ; then
                AC_MSG_ERROR([could not find working GLUT library])
        fi
    fi

    CPPFLAGS="$CPPFLAGS -I/usr/local/include"
    LDFLAGS="$LDFLAGS -L/usr/local/lib"

    WFLAG="-Wall"
    case "$host" in
    mips-sgi-irix*)
        if test "x$CXX" = "xCC"; then
            WFLAG="-fullwarn";
        fi
        ;;
    esac

    CFLAGS="$CFLAGS $WFLAG"
    CXXFLAGS="$CXXFLAGS $WFLAG"

    	LIBS="$plib_suffix $LIBS $x_suffix"
	;;
esac
fi

dnl Check PLIB library
AC_CHECK_LIB(plibul, ulInit, true,
AC_MSG_ERROR([there seems to be a problem with the PLIB libraries]))

dnl Check SGI audio library
AC_CHECK_LIB(audio, ALopenport)

if test "x$ac_cv_lib_audio_ALopenport" = "xyes" ; then
  dnl this is an SGI machine...
  LIBS="$LIBS -laudio"
fi

dnl Checks for typedefs, structures, and compiler characteristics.

dnl check for socklen_t (in Unix98)
AC_MSG_CHECKING(for socklen_t)
AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/socket.h>
socklen_t x;
],[],[
AC_MSG_RESULT(yes)],[
AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/socket.h>
int accept (int, struct sockaddr *, size_t *);
],[],[
AC_MSG_RESULT(size_t)
AC_DEFINE(socklen_t,size_t)], [
AC_MSG_RESULT(int)
AC_DEFINE(socklen_t,int)])])

MY_EXPAND_DIR(ttt3d, "$datadir/games/$PACKAGE")
AC_DEFINE_UNQUOTED(TTT3D_DATADIR, "$ttt3d_datadir")

AC_OUTPUT( Makefile         \
           data/Makefile    \
           doc/Makefile     \
           fonts/Makefile   \
           images/Makefile  \
           mods/Makefile    \
           src/Makefile     \
           wavs/Makefile    \
          )

