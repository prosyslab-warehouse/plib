
+============+
| TO BE DONE |
+============+

A tasks and bugs are now being tracked by sourceforge. Please 
goto: http://sourceforge.net/projects/plib/

  * Have a look into known_bugs and fix them.

  * Lines in ASCII files are terminated...

          With '\n' under UNIX/Linux
          With '\r' under MacOS
          With BOTH under Windoze.

    Hence, UNIX/Linux does no conversions of either '\r' or '\n'.
    and    MAC swaps '\r' and '\n' on input.
    and    Windoze dumps '\r' if it follows a '\n'.

    This is a mess - so I'm changing all the ASCII I/O code
    to allow either or both '\n' or '\r' and I'm reading the
    ASCII files in BINARY mode.
 
  * Array deletion requires '[]' after 'delete' on Mac.

  * Some of the MSVC-project files for plib_examples seem to be 
    broken, for example some miss a "winmm.lib".

  * Check whether the new ssgStripify works with TuxKart
    See Steves post from 11.12.2000 15:12 for a problem description



The abbreviation NIV14 means not in Version 1.4.






Bugs:
=====

- When creating fgfsTux, sometimes .ac, .dxf,
  .ase and .obj saved zero objects, although 
  there were objects. For example, PLIB 
  created this .ac file:
  ----------- snip ------------
  AC3Db
  OBJECT world
  kids 0
  OBJECT group
  kids 0
  ----------- snip ------------
  This seems to happen after ssgFlatten.
- WK: Create a sphere in ppe. Save it as .ASE. See that values like
  diffuse colour are cr*p. Try to load it. It crashes. This could be 
  one or - probably - two bugs. I don't think this is a ppe problem. 
  The loader complains that number of faces is -2.
  The problem seems to be the writer.

  *new remark*: About the diffuse values: I think it has to do with
  colour material, a loader (.ASE?) loading colours into a colour
    list and writing colours from the ssgSimpleState where they are
    undefined. I think the same bug is in .AC 

- WK: I have a crash in ssgFlatten if I load .ac files with 
  unused materials (not reproducable?)
- Loading and saving lines in .OBJ doesn't work. Maybe NIV14.
- Sam wrote:
  Has anyone here debugged with plib under Windoze 2000 and MSVC++?
  I get a whole bunch of
  "Free Heap block modifed after it was free"
  warnings with the ssgFlatten and ssgStripify.
  I'll try and hunt this one down.
  ...
  I think it may be because I'm using MFC which (if I remember 
  correctly) enables a bunch more memory checks.  Also I'm doing
  #ifdef _WIN32
      #ifdef _DEBUG
          #define new DEBUG_NEW
      #endif
  #endif
- MDL loader stuff: 

  It has a problem to correctly determine frontface/backface. 
  Thomas Sevaldrud has the problem as well and wants to look into it
  if/when he has time.

  The MDL loader doesn't/wrongly tesselates non-convex polys.

  The rudder-etc-is-in-false-position is still there, see 
  for example spimk2mp.zip. Obviously, the rotation axis of the 
  rudder goes through the origin (CoG).

  We don't quite know how to get the alpha. For example, many
  planes get opaque propeller discs

  It would be great to have the old gear-etc code back *optionally*.
  Themie Gouthas might do this.

  For the well known B17 model, three of the engines are
  missing, there is only one pilot etc. Is there a OpCode in BGL that
  says "place a copy of that part over here"? 

  Culling seems to be disabled
- Not all loaders use ssgLoaderOptions::begin. Don't all have to?
  See also the Thread:
   "num_shared_textures, was Crash in new .MDL loader fixed."



Working with ssg, especially the file loaders and writers leads
to problems very quickly, therefore the above list might just be a
part of the real number of bugs still in the code. Probably the real 
test will be whether one can work for an hour with plib and not find 
a new bug.
  
Misc:
=====

- Look whether scaling works. [see current discussion]
  If not and if we can't/don't want to make it work, for example 
  because of performance issues we need a warning in the docs and 
  IMHO PLIB should "write out" a warning if an unallowed matrix is
  sent to it.
  Update: Scaling does not work (intentionally). Uniform scaling may be
  enabled by uncommenting "radius *= sgLengthVec3(m[0])" in
  sgSphere::orthoXform. It is currently disabled because that extra
  calculation would degrade performance on non-scaled matrices.
- Reduce lint warnings. Lint is an error checking tool that gives warnings 
  where things *could be* wrong as opposed to the compiler that tells 
  you where they are wrong.

- It would be great if we had one or even two working native .ssg 
  file formats. Currently (16.12.2001) the format work most of the time, but not all 
  entities are implemented.
- We should write the GetWrapU/GetWrapV function, since 
  loading /writing .ssg files can't work 100% without it.
- When saving, there is often a warning that "ref count doesn't 
  tally with parent count"
- Go through the mailing list for unfinished business.
- Someone, preferably a native english speaker with ssg-knowledge,
  should go through the new ssg-doc and fix any mistakes. It should be 
  fairly complete by now.
- Add Per's new Formats to the doc?
- For the other parts of plib, people should bring the doc up to 
  date.
- There is a bug in the 3Dfx driver for Linux (tdfx_dri-4.0.1-1) that
  causes the "complex" example program to crash in "fxSetupBlend".
  This is fixed in more recent DRI snapshots (requires kernel 2.4.x).


Probably after 1.4.0:
=====================
- In fgfsTux, not a large object, you get a DList overflow
  with the standard values for its size. Can we make its
  size dynamic?
- Look at handling of normals. For example, loaders, 
  stripify etc should only recalculate missing normals.
  Have *one* function that recalculates normals.



It would be nice if people would volunteer for tasks.

